name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Passe dies an, falls dein Hauptbranch anders heißt

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Repository auschecken
        uses: actions/checkout@v4

      - name: 🔧 Node.js einrichten
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Abhängigkeiten installieren
        run: npm install

      - name: ✅ Tests ausführen
        run: npm test

      - name: 📂 Deployment-Ordner vorbereiten
        run: |
          mkdir -p public
          cp -r src/* public/  # Kopiert alle Dateien aus `src` nach `public`
      
      - name: ⬆️ Build-Artefakt hochladen (GitHub Pages kompatibel)
        uses: actions/upload-artifact@v4
        with:
          name: github-pages  # Name MUSS mit `download-artifact` übereinstimmen
          path: public  # Speicherort der zu veröffentlichenden Dateien
          retention-days: 1  # Artifact wird nach 1 Tag gelöscht (optional)

  deploy:
    needs: build  # Läuft erst, wenn `build` erfolgreich war
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 📥 Artifact herunterladen (Korrektur)
        uses: actions/download-artifact@v4
        with:
          name: github-pages  # Muss mit `upload-artifact` übereinstimmen
          path: public  # Zielverzeichnis für das Deployment

      - name: 🚀 Deployment auf GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
